<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Checkout | Artisan Luthier Tools</title>
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&family=Roboto:wght@400;500&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background: #f8fafc;
      padding: 40px;
      color: #222;
    }
    .back-btn {
      display: inline-flex;
      align-items: center;
      gap: 6px;
      font-size: 0.95em;
      text-decoration: none;
      color: #444;
      font-weight: 500;
      background: #fff;
      padding: 8px 14px;
      border-radius: 30px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.08);
      transition: all 0.3s ease;
      margin-bottom: 20px;
    }
    .back-btn:hover {
      color: #222;
      background: #f1f3f5;
      transform: translateX(-2px);
    }
    .checkout-container {
      max-width: 500px;
      margin: auto;
      background: #fff;
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(161, 196, 253, 0.2);
      text-align: center;
    }
    h1 {
      font-family: 'Playfair Display', serif;
      font-size: 2em;
      margin-bottom: 20px;
    }
    .cart-summary {
      margin-bottom: 20px;
      text-align: left;
    }
    .cart-summary ul {
      list-style: none;
      padding: 0;
    }
    .cart-summary li {
      margin-bottom: 10px;
      font-size: 1em;
    }
    .total {
      font-weight: bold;
      margin-top: 10px;
      font-size: 1.1em;
    }
    .submit-btn {
      background: linear-gradient(90deg, #ffa99f 0%, #a1c4fd 100%);
      border: none;
      color: #fff;
      font-weight: 600;
      padding: 14px;
      width: 100%;
      border-radius: 8px;
      margin-top: 20px;
      font-size: 1.2em;
      cursor: pointer;
    }
    .submit-btn:hover {
      background: linear-gradient(90deg, #a1c4fd 0%, #ffa99f 100%);
    }
    .submit-btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
  </style>
</head>
<body>
  <div class="checkout-container">
    <a href="/products" class="back-btn">← Back to Products</a>
    <h1>Checkout</h1>

    <div class="cart-summary" id="cart-summary">
      <h3>Order Summary</h3>
      <ul id="cart-items"></ul>
      <p class="total" id="cart-total">Total: $0.00</p>
    </div>

    <form id="checkout-form" action="/checkout" method="POST">
      <input type="hidden" name="cart" id="cart-data" />
      <button type="submit" id="pay-button" class="submit-btn" disabled>Proceed to Checkout</button>
    </form>
  </div>

  <script>

    const cartItems = document.getElementById('cart-items');
    const cartTotalEl = document.getElementById('cart-total');
    const payButton = document.getElementById('pay-button');
    const cartDataInput = document.getElementById('cart-data');


    function getCartFromQuery() {
  const params = new URLSearchParams(window.location.search);
  if (params.has("cart")) {
    try {
      return JSON.parse(decodeURIComponent(params.get("cart")));
    } catch {
      return [];
    }
  }
  return JSON.parse(localStorage.getItem("cart") || "[]");
}

function renderCartSummary() {
  const cart = getCartFromQuery(); // ✅ now supports query string
  console.log("Cart contents:", cart); // Debug
  if (!cart.length) {
    cartItems.innerHTML = '<li>Your cart is empty.</li>';
    cartTotalEl.textContent = 'Total: $0.00';
    payButton.disabled = true;
    cartDataInput.value = '';
    return;
  }

      let total = 0;
      cartItems.innerHTML = '';

      cart.forEach(item => {
        const itemTotal = Number(item.price) * Number(item.qty);
        total += itemTotal;

        const li = document.createElement('li');
        li.textContent = `${item.name} x${item.qty} - $${itemTotal.toFixed(2)}`;
        cartItems.appendChild(li);
      });

      cartTotalEl.textContent = `Total: $${total.toFixed(2)}`;
      cartDataInput.value = JSON.stringify(cart);
      payButton.disabled = false;
    }

  
    document.addEventListener("DOMContentLoaded", () => {
  renderCartSummary();
});

</script>
</body>
</html>
